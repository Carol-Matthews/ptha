# Script which is included in application makefiles, to compile things in SRC.
#
# It is assumed FORTRAN, CC, GDAL_CFLAGS, and NETCDF_FINCLUDE are defined
# See src_standard_compiler_var for examples of these
#

# Make a library
OBJECTS :=global_mod.o stop_mod.o reshape_array_mod.o which_mod.o linear_interpolator_mod.o ragged_array_mod.o spherical_mod.o points_in_poly_mod.o file_io_mod.o point_gauge_mod.o timer_mod.o coarray_point2point_comms_mod.o nested_grid_comms_mod.o coarray_utilities_mod.o domain_mod.o boundary_mod.o read_raster_c.o read_raster_mod.o

# Make the library
libSWE.a: $(OBJECTS)
	ar rcs $@ $^

# This is the 'generic build rule' for my modules -- it is applied unless the
# module file matches one of the 'specific' build rules below
%_mod.o: $(SRC)/*/%_mod.f90
	$(FORTRAN) -c $^

# Note this one relies on GDAL
read_raster_c.o: $(SRC)/raster/read_raster_c.c
	$(CC) -c $(SRC)/raster/read_raster_c.c $(GDAL_CFLAGS)

# Note this one relies on NETCDF, unless compiled with -DNONETCDF,
# in which case NETCDF_FINCLUDE should be set to 'nothing' like:
#     NETCDF_FINCLUDE=
#
point_gauge_mod.o: $(SRC)/shallow_water/point_gauge_mod.f90 
	$(FORTRAN) -g -c $^ $(NETCDF_FINCLUDE)

