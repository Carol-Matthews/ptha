% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rupture_probabilities.R
\name{exceedance_rate_of_observed}
\alias{exceedance_rate_of_observed}
\title{Exceedance rate of observations with random errors}
\usage{
exceedance_rate_of_observed(exceedance_true, cdf_obs_error, data_value,
  true_value_range, integration_eps = 0.01)
}
\arguments{
\item{exceedance_true}{exceedance rate function R(y) of a single variable}

\item{cdf_obs_error}{function F(x,y) giving the CDF of the error if y is fixed}

\item{data_value}{the function will return the rate of observations above data_value}

\item{true_value_range}{range of the true value to integrate over}

\item{integration_eps}{numerically integrate with this spacing}
}
\value{
value of the integral, which gives the rate of 'observed' (= true + error) that
are greater than data_thresh
}
\description{
Suppose that a process generates values 'y' from a known exceedance rate
function (such as a Gutenberg-Richter distribution with fixed parameters),
and we observe 'y + obs_error' where obs_error has a known distribution
dependent on the value of 'y'. This function can calculate the exceedance
rate of the observations. \cr
Written another way, suppose:
the rate of true values that exceed y is exceedance_true(y); \cr
cdf_obs_error(obs_err, y) is the CDF of obs_err given the true value 'y'; \cr
the observed value is (y+obs_err); \cr
Then this function computes the rate at which observed_value is above data_value, i.e. \cr
integral { (1 - cdf_obs_error(data_value - y | y)) * (-d(exceedance_true)/d(true_value) ) } dy \cr
This is done with numerical integration
}
\examples{

# Make a problem with known rate functions and error models, then compute the answer
# in multiple ways, and check it works 
N = 1e+06 # Just make this large enough for the numerical integration to work
y = rexp(N) # The true value. This has exceedance rate function '(1-pexp)'
delta = rgamma(N, shape=1, scale=2+y) # The error, with a distribution that depends on the true value
observed = y + delta # The observed value
data_thresh = 4 # Say we want the rate of observed>data_thresh

# The example allows us to compute rate(observed>data_thresh) empirically,
# and analytically, and check that exceedance_rate_of_observed also gives the right answer

# Integration of this function gives the analytical solution
f<-function(y,x) dexp(y) * (1-pgamma(x-y, shape=1, scale=2+y))
# These 2 numbers should be equal for a large enough sample
pr_observed_gt_4_A = mean(observed > data_thresh)
pr_observed_gt_4_B = integrate(f, lower=-2, upper=20, x=data_thresh)
# Further, the integral is also 'the same' (for large enough N) as
pr_observed_gt_4_C = mean(1-pgamma(data_thresh - y, shape=1, scale=2+y))

#
# Here we evaluate the solution with the current function
#
ex_true<-function(y) (1-pexp(y))
cdf_obs_error<-function(x, y) v1 = pgamma(x, shape=1, scale=2+y)
val = exceedance_rate_of_observed(ex_true, cdf_obs_error, data_thresh,
   true_value_range = c(0, 20))
stopifnot(abs(val - pr_observed_gt_4_B$value) < 1.0e-06)

}
