% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometric_util.R
\name{lonlat_in_poly}
\alias{lonlat_in_poly}
\title{Determine whether lonlat coordinates are inside a given polygon}
\usage{
lonlat_in_poly(lonlat, poly, buffer_width = 0)
}
\arguments{
\item{lonlat}{2 column matrix with longitude/latitude of points}

\item{poly}{SpatialPolygons object}

\item{buffer}{width thickness of buffer to apply to poly before testing the point inclusion.}
}
\value{
logical vector with one entry for every row in lonlat.
}
\description{
Takes care of different longitude conventions (i.e. offsets longitude by 360
as required to be inside polygon). If buffer_width is provided, then poly is
buffered by this amount prior to testing inclusion. Buffer_width should be
in degrees, which means the 'buffer distance' is not identical everywhere.
}
\examples{
# Point p
  p = matrix( c(-180, 10, 180, 10), ncol=2, byrow=TRUE) # Same point with different longitude conventions
  poly_coords = matrix(c(170, 9, 190, 9, 190, 11, 170, 11), ncol=2, byrow=TRUE)
  poly_sp = SpatialPolygons(list(Polygons(list(Polygon(poly_coords)), ID='1')), proj4string=CRS("+init=epsg:4326"))
  is_inside = lonlat_in_poly(p, poly_sp)
  stopifnot(all(is_inside==TRUE))

}
