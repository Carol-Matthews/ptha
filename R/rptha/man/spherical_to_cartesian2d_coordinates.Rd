% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/geometric_util.R
\name{spherical_to_cartesian2d_coordinates}
\alias{spherical_to_cartesian2d_coordinates}
\title{Convert from spherical coordinates to a local 2D cartesian coordinate system}
\usage{
spherical_to_cartesian2d_coordinates(coords_lonlat, origin_lonlat = NULL,
  r = 6378137)
}
\arguments{
\item{coords_lonlat}{matrix with 2 columns (lon/lat) in degrees}

\item{origin_lonlat}{vector of length 2 giving the lon/lat for the origin of
the new coordinate system}

\item{r}{radius of the sphere (earth radius in m as default)}
}
\value{
matrix with x,y in the new coordinate system (units same as r units)
}
\description{
Given lon-lat coordinates for a sphere, and an origin (also lon-lat),
compute the coordinates in a 'local' cartesian 2D coordinate system (x,y):
dlat = lat - origin_latitude
dlon = lon - origin_longitude
x --> r*dlon*cos(origin_latitude)
y --> r*dlat
This will only have good accuracy for small areas near to the origin (and not too close to the
poles)
}
\examples{
# Make some random coordinates near to (20, -19)
lonlat = cbind(20 + 0.1*runif(10), -19 + 0.1*runif(10))
origin = c(20, -19)
# Convert to local xy system
new_coords = spherical_to_cartesian2d_coordinates(lonlat, origin)
}

