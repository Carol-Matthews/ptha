% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometric_util.R
\name{rotate_cartesian2d}
\alias{rotate_cartesian2d}
\title{Point rotation}
\usage{
rotate_cartesian2d(points, origin, x_axis_vector, inverse = FALSE)
}
\arguments{
\item{points}{matrix with 2 columns containing point x,y cartesian
coordinates}

\item{origin}{numeric vector of length 2 giving the origin of the new
coordinate system}

\item{x_axis_vector}{vector of length 2 which defines the positive x}

\item{inverse}{logical. If TRUE, perform the inverse operation
direction of the new coordinate system}
}
\value{
points in the new coordinate system
}
\description{
Given a set of cartesian x,y coordinates, create a new rotated coordinate
system with a given origin and x-axis direction and return the points in the
new coordinate system. With inverse = TRUE you can undo the rotation, see
the example.
}
\examples{
library(rptha)
p1 = rbind(c(500,300), c(-60, 20), c(300, 12))
origin = c(3000,4012)
x_axis_vector = c(30,-1)
# Get p1 in a new coordinate system
p1_rot = rotate_cartesian2d(p1, origin, x_axis_vector)
# Back-calculate the original points
inverted_points = rotate_cartesian2d(p1_rot, origin, x_axis_vector, inverse=TRUE)
# Should be identical to p1
stopifnot(isTRUE(all.equal(c(inverted_points), c(p1))))

}

